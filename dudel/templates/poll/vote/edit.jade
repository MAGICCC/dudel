- extends "poll/BASE.jade"

block polltitle
    - if vote
        = _("Edit Vote")
    - else
        = _("Vote")

block content
    .container
        - if not vote and not current_user.is_anonymous() and poll.get_user_votes(current_user)
            != alert("warning", _("You have already voted on this poll. Maybe instead of voting again you'd rather edit your choices?"))

        - if vote
            != alert("warning", _("You are editing a vote, not casting a new one."))

        ul.help-list
            li= _("Hold left mouse button and drag mouse to select multiple vote choices.")

        form.form-inline(method="POST")
            = form.hidden_tag()
            = form_errors(form)

            - set choices = poll.get_choices()
            - set matrix = poll.get_choice_group_matrix()
            - set numeric = (PollType.numeric == poll.type)

            table.table.poll.vote.auto-width(
                    data-minimum=(poll.amount_minimum or 0 if numeric else None),
                    data-maximum=(poll.amount_maximum or 0 if numeric else None),
                    data-step=(poll.amount_step or 0 if numeric else None))

                tr.script-only
                    td(colspan=(matrix[0]|length if matrix else 1))

                    - for value in poll.get_choice_values()
                        td.text-center
                            input.action.small.vote-choice-column(type="button", value=_('all'), data-choice=value.id)/

                    td

                - for i, row in enumerate(matrix)
                    - set choice = choices[i]
                    - set subform = form.vote_choices[i]

                    tr(data-vote-choice=choice.id)
                        - for item in row
                            - if item[0] != None
                                td.choice-group(colspan=item[1], rowspan=item[2])
                                    = item[0] | group_title(poll)

                        - if numeric
                            td
                                = subform.amount(class="form-control input-sm numeric slider")

                        - else
                            - for value in poll.get_choice_values()
                                td.vote-choice.control.off.script-only(data-choice=value.id,
                                        title=value.title,
                                        style="background-color: ##{value.color};")
                                    i(class="fa fa-#{value.icon}")

                        td.vote-comment
                            = subform.hidden_tag()

                            .vote-choice-form
                                - if not numeric
                                    - for field in subform.value
                                        = field(class="vote-choice-radio", checked=(vote and field.data == poll.get_vote_choice(vote, choice).value_id))
                                        = field.label

                            = subform.comment(class="form-control input-sm", placeholder=subform.comment.label.text)

                tr: td(colspan=6): hr/

                tr
                    td(colspan=(matrix[0]|length if matrix else 1))= form.name.label
                    td(colspan=3)
                        - if (not vote and current_user.is_anonymous()) or (vote and not vote.user)
                            = form.name(class="form-control", id="nameInput")
                        - else
                            input.form-control(type="text", disabled="DISABLED", value=current_user.displayname)/
                            input(type="hidden", value="PLACEHOLDER", name="name")/

                        - if poll.anonymous_allowed
                            .checkbox
                                = form.anonymous()
                                = form.anonymous.label
                    td

                tr
                    td(colspan=(matrix[0]|length if matrix else 1))
                        = form.comment.label
                        span.help-inline= "(" + _("optional") + ")"

                    td(colspan=4)
                        = form.comment(class="form-control", rows=3)

                tr
                    td(colspan=(matrix[0]|length if matrix else 1))
                    td(colspan=3)
                        button.action.primary.block(type="submit")
                            i.fa.fa-check
                            span= _("Save vote")
                    td

        - if vote and vote.user_can_delete(current_user)
            hr/
            h3= _("Delete vote")

            p= _("You can delete this vote if it has been cast accidentally. Note that we log who uses this, just to make sure.")

            a.action.danger.small(href=url_for('poll_vote_delete', slug=poll.slug, vote_id=vote.id))
                i.fa.fa-times
                span= _("Delete vote")
