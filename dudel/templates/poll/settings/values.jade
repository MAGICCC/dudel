- extends "poll/BASE.jade"

- block polltitle
    = _("Values")

- block content
    - if poll.type == PollType.numeric
        .container.small
            .page-header
                h2= _("Adjust value range")

            form(method="POST")
                = form.hidden_tag()

                .row
                    .col-xs-4: .form-group
                        = form.minimum.label
                        = form.minimum(class="form-control")
                        = field_error(form.minimum)

                    .col-xs-4: .form-group
                        = form.maximum.label
                        = form.maximum(class="form-control")
                        = field_error(form.maximum)

                    .col-xs-4: .form-group
                        = form.step.label
                        = form.step(class="form-control")
                        = field_error(form.step)

                .form-actions
                    button.action.primary(type="submit")
                        span= _('Save')
                        i.fa.fa-arrow-right

    - else
        .container
            p= _("Here you can edit which options the voters have for each choice you give them. By default, <b>yes</b>, <b>no</b> and <b>maybe</b> are always enabled, but you can disable or change any of these. You should have at least one value in this list for the voting to make sense.")|safe

            p= _("Weights are factors on how the total score for a choice is calculated. These values are normally somewhere between 0 and 1. The total score is displayed both as a percentage and as the weight sum, so you are allowed to use other values if you want them to \"cancel out\".")


            .row
                .col-md-6
                    h2= _("Available choices")
                    table.table.auto-width.poll
                        tr
                            th= _("Title")
                            th= _("Color/Icon")
                            th= _("Weight")
                            th= _("Votes cast")
                            th= _("Actions")

                        - for value in poll.choice_values
                            - set vote_count = value.vote_choices.count()

                            tr(class=cx("choice", {
                                    'deleted': value.deleted,
                                    'editing mine': value == edit_value
                                }))

                                td.author.choice= value.title

                                td.vote-choice(style="background-color: ##{value.color};")
                                    i(class=cx("fa", "fa-#{value.icon}"))

                                td.author= value.weight

                                td.author
                                    strong= vote_count

                                td.author
                                    a.action.icon(href="?edit=#{value.id}", title=_('Edit'))
                                        i.fa.fa-pencil

                                    a.action.icon(href="?toggle=#{value.id}&_csrf_token=#{CSRF}", title=_('Recover' if value.deleted else 'Delete'))
                                        - if value.deleted
                                            i.fa.fa-undo
                                        - else
                                            i.fa.fa-trash-o

                .col-md-6
                    - if edit_value
                        h2= _("Edit choice value: %(title)s", title=edit_value.title)
                    - else
                        h2= _("Add a choice value")

                    form(method="POST")
                        = form.hidden_tag()
                        = form_errors(form)

                        .row
                            .col-sm-6.form-group
                                = form.title.label
                                = form.title(class="form-control input-sm")

                            .col-sm-6.form-group
                                = form.weight.label
                                span.help-inline= _("(usually between 0 and 1)")

                                = form.weight(class="form-control input-sm", placeholder=form.weight.label.text, placeholder="0.00")

                        .row
                            .col-sm-6.form-group
                                = form.color.label
                                .input-group
                                    .input-group-addon #
                                    = form.color(class="form-control input-sm", placeholder="RRGGBB")

                            .col-sm-6.form-group
                                = form.icon.label
                                span.help-inline= _("(any FontAwesome icon)")
                                .input-group
                                    .input-group-addon fa fa-
                                    = form.icon(class="form-control input-sm", placeholder=form.icon.label.text)

                        .form-actions
                            button.action.primary
                                span= (_('Save') if edit_value else _('Add'))
                                i.fa.fa-arrow-right

                    h3= _("Available icons")

                    p.script-only= _("Click icon to insert it into the form.")

                    ul.icon-preview
                        - for icon in ICONS
                            li
                                button(data-icon=icon[0])
                                    i(class=cx("fa", "fa-2x", "fa-#{icon[0]}"))
                                    span= icon[0]
